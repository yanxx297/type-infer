
tr-fig-3:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 47 da             	add    %al,-0x26(%edi)
 804819a:	7b 58                	jnp    80481f4 <_init-0xa0>
 804819c:	4a                   	dec    %edx
 804819d:	e1 7a                	loope  8048219 <_init-0x7b>
 804819f:	37                   	aaa    
 80481a0:	17                   	pop    %ss
 80481a1:	c3                   	ret    
 80481a2:	dc 3c 33             	fdivrl (%ebx,%esi,1)
 80481a5:	e5 a5                	in     $0xa5,%eax
 80481a7:	a8 71                	test   $0x71,%al
 80481a9:	02 5a 20             	add    0x20(%edx),%bl

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	03 00                	add    (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 03                	add    %al,(%ebx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x108>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	01 00                	add    %eax,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	20 00                	and    %al,(%eax)
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	29 00                	sub    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	1a 00                	sbb    (%eax),%al
 80481fe:	00 00                	add    %al,(%eax)
 8048200:	2c 85                	sub    $0x85,%al
 8048202:	04 08                	add    $0x8,%al
 8048204:	04 00                	add    $0x0,%al
 8048206:	00 00                	add    %al,(%eax)
 8048208:	11 00                	adc    %eax,(%eax)
 804820a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804820c <.dynstr>:
 804820c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804820f:	67 6d                	insl   (%dx),%es:(%di)
 8048211:	6f                   	outsl  %ds:(%esi),(%dx)
 8048212:	6e                   	outsb  %ds:(%esi),(%dx)
 8048213:	5f                   	pop    %edi
 8048214:	73 74                	jae    804828a <_init-0xa>
 8048216:	61                   	popa   
 8048217:	72 74                	jb     804828d <_init-0x7>
 8048219:	5f                   	pop    %edi
 804821a:	5f                   	pop    %edi
 804821b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804821f:	63 2e                	arpl   %bp,(%esi)
 8048221:	73 6f                	jae    8048292 <_init-0x2>
 8048223:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048228:	4f                   	dec    %edi
 8048229:	5f                   	pop    %edi
 804822a:	73 74                	jae    80482a0 <_init+0xc>
 804822c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048233:	64 
 8048234:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048237:	6c                   	insb   (%dx),%es:(%edi)
 8048238:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804823f:	72 74                	jb     80482b5 <_init+0x21>
 8048241:	5f                   	pop    %edi
 8048242:	6d                   	insl   (%dx),%es:(%edi)
 8048243:	61                   	popa   
 8048244:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 804824b:	43                   	inc    %ebx
 804824c:	5f                   	pop    %edi
 804824d:	32 2e                	xor    (%esi),%ch
 804824f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048252 <.gnu.version>:
 8048252:	00 00                	add    %al,(%eax)
 8048254:	00 00                	add    %al,(%eax)
 8048256:	02 00                	add    (%eax),%al
 8048258:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

0804825c <.gnu.version_r>:
 804825c:	01 00                	add    %eax,(%eax)
 804825e:	01 00                	add    %eax,(%eax)
 8048260:	10 00                	adc    %al,(%eax)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	10 00                	adc    %al,(%eax)
 8048266:	00 00                	add    %al,(%eax)
 8048268:	00 00                	add    %al,(%eax)
 804826a:	00 00                	add    %al,(%eax)
 804826c:	10 69 69             	adc    %ch,0x69(%ecx)
 804826f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048274:	3b 00                	cmp    (%eax),%eax
 8048276:	00 00                	add    %al,(%eax)
 8048278:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804827c <.rel.dyn>:
 804827c:	f0 9f                	lock lahf 
 804827e:	04 08                	add    $0x8,%al
 8048280:	06                   	push   %es
 8048281:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048284 <.rel.plt>:
 8048284:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 804828a:	00 00                	add    %al,(%eax)
 804828c:	04 a0                	add    $0xa0,%al
 804828e:	04 08                	add    $0x8,%al
 8048290:	07                   	pop    %es
 8048291:	02 00                	add    (%eax),%al
	...

Disassembly of section .init:

08048294 <_init>:
 8048294:	53                   	push   %ebx
 8048295:	83 ec 08             	sub    $0x8,%esp
 8048298:	e8 00 00 00 00       	call   804829d <_init+0x9>
 804829d:	5b                   	pop    %ebx
 804829e:	81 c3 57 1d 00 00    	add    $0x1d57,%ebx
 80482a4:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482aa:	85 c0                	test   %eax,%eax
 80482ac:	74 05                	je     80482b3 <_init+0x1f>
 80482ae:	e8 2d 00 00 00       	call   80482e0 <__gmon_start__@plt>
 80482b3:	e8 d8 00 00 00       	call   8048390 <frame_dummy>
 80482b8:	e8 23 02 00 00       	call   80484e0 <__do_global_ctors_aux>
 80482bd:	83 c4 08             	add    $0x8,%esp
 80482c0:	5b                   	pop    %ebx
 80482c1:	c3                   	ret    

Disassembly of section .plt:

080482d0 <__gmon_start__@plt-0x10>:
 80482d0:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80482d6:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482dc:	00 00                	add    %al,(%eax)
	...

080482e0 <__gmon_start__@plt>:
 80482e0:	ff 25 00 a0 04 08    	jmp    *0x804a000
 80482e6:	68 00 00 00 00       	push   $0x0
 80482eb:	e9 e0 ff ff ff       	jmp    80482d0 <_init+0x3c>

080482f0 <__libc_start_main@plt>:
 80482f0:	ff 25 04 a0 04 08    	jmp    *0x804a004
 80482f6:	68 08 00 00 00       	push   $0x8
 80482fb:	e9 d0 ff ff ff       	jmp    80482d0 <_init+0x3c>

Disassembly of section .text:

08048300 <_start>:
 8048300:	31 ed                	xor    %ebp,%ebp
 8048302:	5e                   	pop    %esi
 8048303:	89 e1                	mov    %esp,%ecx
 8048305:	83 e4 f0             	and    $0xfffffff0,%esp
 8048308:	50                   	push   %eax
 8048309:	54                   	push   %esp
 804830a:	52                   	push   %edx
 804830b:	68 d0 84 04 08       	push   $0x80484d0
 8048310:	68 60 84 04 08       	push   $0x8048460
 8048315:	51                   	push   %ecx
 8048316:	56                   	push   %esi
 8048317:	68 3b 84 04 08       	push   $0x804843b
 804831c:	e8 cf ff ff ff       	call   80482f0 <__libc_start_main@plt>
 8048321:	f4                   	hlt    
 8048322:	90                   	nop
 8048323:	90                   	nop
 8048324:	90                   	nop
 8048325:	90                   	nop
 8048326:	90                   	nop
 8048327:	90                   	nop
 8048328:	90                   	nop
 8048329:	90                   	nop
 804832a:	90                   	nop
 804832b:	90                   	nop
 804832c:	90                   	nop
 804832d:	90                   	nop
 804832e:	90                   	nop
 804832f:	90                   	nop

08048330 <__do_global_dtors_aux>:
 8048330:	55                   	push   %ebp
 8048331:	89 e5                	mov    %esp,%ebp
 8048333:	53                   	push   %ebx
 8048334:	83 ec 04             	sub    $0x4,%esp
 8048337:	80 3d 10 a0 04 08 00 	cmpb   $0x0,0x804a010
 804833e:	75 3f                	jne    804837f <__do_global_dtors_aux+0x4f>
 8048340:	a1 14 a0 04 08       	mov    0x804a014,%eax
 8048345:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804834a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048350:	c1 fb 02             	sar    $0x2,%ebx
 8048353:	83 eb 01             	sub    $0x1,%ebx
 8048356:	39 d8                	cmp    %ebx,%eax
 8048358:	73 1e                	jae    8048378 <__do_global_dtors_aux+0x48>
 804835a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048360:	83 c0 01             	add    $0x1,%eax
 8048363:	a3 14 a0 04 08       	mov    %eax,0x804a014
 8048368:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804836f:	a1 14 a0 04 08       	mov    0x804a014,%eax
 8048374:	39 d8                	cmp    %ebx,%eax
 8048376:	72 e8                	jb     8048360 <__do_global_dtors_aux+0x30>
 8048378:	c6 05 10 a0 04 08 01 	movb   $0x1,0x804a010
 804837f:	83 c4 04             	add    $0x4,%esp
 8048382:	5b                   	pop    %ebx
 8048383:	5d                   	pop    %ebp
 8048384:	c3                   	ret    
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <frame_dummy>:
 8048390:	55                   	push   %ebp
 8048391:	89 e5                	mov    %esp,%ebp
 8048393:	83 ec 18             	sub    $0x18,%esp
 8048396:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804839b:	85 c0                	test   %eax,%eax
 804839d:	74 12                	je     80483b1 <frame_dummy+0x21>
 804839f:	b8 00 00 00 00       	mov    $0x0,%eax
 80483a4:	85 c0                	test   %eax,%eax
 80483a6:	74 09                	je     80483b1 <frame_dummy+0x21>
 80483a8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80483af:	ff d0                	call   *%eax
 80483b1:	c9                   	leave  
 80483b2:	c3                   	ret    
 80483b3:	90                   	nop

080483b4 <f>:
 80483b4:	55                   	push   %ebp
 80483b5:	89 e5                	mov    %esp,%ebp
 80483b7:	83 ec 30             	sub    $0x30,%esp
 80483ba:	8b 45 08             	mov    0x8(%ebp),%eax
 80483bd:	89 c2                	mov    %eax,%edx
 80483bf:	c1 ea 1f             	shr    $0x1f,%edx
 80483c2:	01 d0                	add    %edx,%eax
 80483c4:	d1 f8                	sar    %eax
 80483c6:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80483c9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483cc:	89 c2                	mov    %eax,%edx
 80483ce:	c1 ea 1f             	shr    $0x1f,%edx
 80483d1:	01 d0                	add    %edx,%eax
 80483d3:	d1 f8                	sar    %eax
 80483d5:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80483d8:	8b 45 10             	mov    0x10(%ebp),%eax
 80483db:	89 c2                	mov    %eax,%edx
 80483dd:	c1 ea 1f             	shr    $0x1f,%edx
 80483e0:	01 d0                	add    %edx,%eax
 80483e2:	d1 f8                	sar    %eax
 80483e4:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80483e7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80483ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80483ed:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80483f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80483f3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80483f6:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80483f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80483fc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80483ff:	01 d0                	add    %edx,%eax
 8048401:	03 45 ec             	add    -0x14(%ebp),%eax
 8048404:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048407:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804840a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804840d:	31 d0                	xor    %edx,%eax
 804840f:	33 45 ec             	xor    -0x14(%ebp),%eax
 8048412:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048415:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048418:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804841b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804841e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048421:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048424:	d1 e8                	shr    %eax
 8048426:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048429:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804842c:	d1 e8                	shr    %eax
 804842e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048431:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048434:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048437:	01 d0                	add    %edx,%eax
 8048439:	c9                   	leave  
 804843a:	c3                   	ret    

0804843b <main>:
 804843b:	55                   	push   %ebp
 804843c:	89 e5                	mov    %esp,%ebp
 804843e:	83 ec 0c             	sub    $0xc,%esp
 8048441:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 8048448:	00 
 8048449:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 8048450:	00 
 8048451:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048458:	e8 57 ff ff ff       	call   80483b4 <f>
 804845d:	c9                   	leave  
 804845e:	c3                   	ret    
 804845f:	90                   	nop

08048460 <__libc_csu_init>:
 8048460:	55                   	push   %ebp
 8048461:	57                   	push   %edi
 8048462:	56                   	push   %esi
 8048463:	53                   	push   %ebx
 8048464:	e8 69 00 00 00       	call   80484d2 <__i686.get_pc_thunk.bx>
 8048469:	81 c3 8b 1b 00 00    	add    $0x1b8b,%ebx
 804846f:	83 ec 1c             	sub    $0x1c,%esp
 8048472:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048476:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804847c:	e8 13 fe ff ff       	call   8048294 <_init>
 8048481:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048487:	29 c7                	sub    %eax,%edi
 8048489:	c1 ff 02             	sar    $0x2,%edi
 804848c:	85 ff                	test   %edi,%edi
 804848e:	74 29                	je     80484b9 <__libc_csu_init+0x59>
 8048490:	31 f6                	xor    %esi,%esi
 8048492:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048498:	8b 44 24 38          	mov    0x38(%esp),%eax
 804849c:	89 2c 24             	mov    %ebp,(%esp)
 804849f:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484a3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80484a7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484ab:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80484b2:	83 c6 01             	add    $0x1,%esi
 80484b5:	39 fe                	cmp    %edi,%esi
 80484b7:	75 df                	jne    8048498 <__libc_csu_init+0x38>
 80484b9:	83 c4 1c             	add    $0x1c,%esp
 80484bc:	5b                   	pop    %ebx
 80484bd:	5e                   	pop    %esi
 80484be:	5f                   	pop    %edi
 80484bf:	5d                   	pop    %ebp
 80484c0:	c3                   	ret    
 80484c1:	eb 0d                	jmp    80484d0 <__libc_csu_fini>
 80484c3:	90                   	nop
 80484c4:	90                   	nop
 80484c5:	90                   	nop
 80484c6:	90                   	nop
 80484c7:	90                   	nop
 80484c8:	90                   	nop
 80484c9:	90                   	nop
 80484ca:	90                   	nop
 80484cb:	90                   	nop
 80484cc:	90                   	nop
 80484cd:	90                   	nop
 80484ce:	90                   	nop
 80484cf:	90                   	nop

080484d0 <__libc_csu_fini>:
 80484d0:	f3 c3                	repz ret 

080484d2 <__i686.get_pc_thunk.bx>:
 80484d2:	8b 1c 24             	mov    (%esp),%ebx
 80484d5:	c3                   	ret    
 80484d6:	90                   	nop
 80484d7:	90                   	nop
 80484d8:	90                   	nop
 80484d9:	90                   	nop
 80484da:	90                   	nop
 80484db:	90                   	nop
 80484dc:	90                   	nop
 80484dd:	90                   	nop
 80484de:	90                   	nop
 80484df:	90                   	nop

080484e0 <__do_global_ctors_aux>:
 80484e0:	55                   	push   %ebp
 80484e1:	89 e5                	mov    %esp,%ebp
 80484e3:	53                   	push   %ebx
 80484e4:	83 ec 04             	sub    $0x4,%esp
 80484e7:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 80484ec:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484ef:	74 13                	je     8048504 <__do_global_ctors_aux+0x24>
 80484f1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80484f6:	66 90                	xchg   %ax,%ax
 80484f8:	83 eb 04             	sub    $0x4,%ebx
 80484fb:	ff d0                	call   *%eax
 80484fd:	8b 03                	mov    (%ebx),%eax
 80484ff:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048502:	75 f4                	jne    80484f8 <__do_global_ctors_aux+0x18>
 8048504:	83 c4 04             	add    $0x4,%esp
 8048507:	5b                   	pop    %ebx
 8048508:	5d                   	pop    %ebp
 8048509:	c3                   	ret    
 804850a:	90                   	nop
 804850b:	90                   	nop

Disassembly of section .fini:

0804850c <_fini>:
 804850c:	53                   	push   %ebx
 804850d:	83 ec 08             	sub    $0x8,%esp
 8048510:	e8 00 00 00 00       	call   8048515 <_fini+0x9>
 8048515:	5b                   	pop    %ebx
 8048516:	81 c3 df 1a 00 00    	add    $0x1adf,%ebx
 804851c:	e8 0f fe ff ff       	call   8048330 <__do_global_dtors_aux>
 8048521:	83 c4 08             	add    $0x8,%esp
 8048524:	5b                   	pop    %ebx
 8048525:	c3                   	ret    

Disassembly of section .rodata:

08048528 <_fp_hw>:
 8048528:	03 00                	add    (%eax),%eax
	...

0804852c <_IO_stdin_used>:
 804852c:	01 00                	add    %eax,(%eax)
 804852e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

08048530 <.eh_frame_hdr>:
 8048530:	01 1b                	add    %ebx,(%ebx)
 8048532:	03 3b                	add    (%ebx),%edi
 8048534:	38 00                	cmp    %al,(%eax)
 8048536:	00 00                	add    %al,(%eax)
 8048538:	06                   	push   %es
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 a0 fd ff ff 54    	add    %ah,0x54fffffd(%eax)
 8048541:	00 00                	add    %al,(%eax)
 8048543:	00 84 fe ff ff 78 00 	add    %al,0x78ffff(%esi,%edi,8)
 804854a:	00 00                	add    %al,(%eax)
 804854c:	0b ff                	or     %edi,%edi
 804854e:	ff                   	(bad)  
 804854f:	ff 98 00 00 00 30    	lcall  *0x30000000(%eax)
 8048555:	ff                   	(bad)  
 8048556:	ff                   	(bad)  
 8048557:	ff                   	(bad)  
 8048558:	b8 00 00 00 a0       	mov    $0xa0000000,%eax
 804855d:	ff                   	(bad)  
 804855e:	ff                   	(bad)  
 804855f:	ff f4                	push   %esp
 8048561:	00 00                	add    %al,(%eax)
 8048563:	00 a2 ff ff ff 08    	add    %ah,0x8ffffff(%edx)
 8048569:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

0804856c <__FRAME_END__-0xe0>:
 804856c:	14 00                	adc    $0x0,%al
 804856e:	00 00                	add    %al,(%eax)
 8048570:	00 00                	add    %al,(%eax)
 8048572:	00 00                	add    %al,(%eax)
 8048574:	01 7a 52             	add    %edi,0x52(%edx)
 8048577:	00 01                	add    %al,(%ecx)
 8048579:	7c 08                	jl     8048583 <_IO_stdin_used+0x57>
 804857b:	01 1b                	add    %ebx,(%ebx)
 804857d:	0c 04                	or     $0x4,%al
 804857f:	04 88                	add    $0x88,%al
 8048581:	01 00                	add    %eax,(%eax)
 8048583:	00 20                	add    %ah,(%eax)
 8048585:	00 00                	add    %al,(%eax)
 8048587:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804858a:	00 00                	add    %al,(%eax)
 804858c:	44                   	inc    %esp
 804858d:	fd                   	std    
 804858e:	ff                   	(bad)  
 804858f:	ff 30                	pushl  (%eax)
 8048591:	00 00                	add    %al,(%eax)
 8048593:	00 00                	add    %al,(%eax)
 8048595:	0e                   	push   %cs
 8048596:	08 46 0e             	or     %al,0xe(%esi)
 8048599:	0c 4a                	or     $0x4a,%al
 804859b:	0f 0b                	ud2    
 804859d:	74 04                	je     80485a3 <_IO_stdin_used+0x77>
 804859f:	78 00                	js     80485a1 <_IO_stdin_used+0x75>
 80485a1:	3f                   	aas    
 80485a2:	1a 3b                	sbb    (%ebx),%bh
 80485a4:	2a 32                	sub    (%edx),%dh
 80485a6:	24 22                	and    $0x22,%al
 80485a8:	1c 00                	sbb    $0x0,%al
 80485aa:	00 00                	add    %al,(%eax)
 80485ac:	40                   	inc    %eax
 80485ad:	00 00                	add    %al,(%eax)
 80485af:	00 04 fe             	add    %al,(%esi,%edi,8)
 80485b2:	ff                   	(bad)  
 80485b3:	ff 87 00 00 00 00    	incl   0x0(%edi)
 80485b9:	41                   	inc    %ecx
 80485ba:	0e                   	push   %cs
 80485bb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80485c1:	02 83 c5 0c 04 04    	add    0x4040cc5(%ebx),%al
 80485c7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80485ca:	00 00                	add    %al,(%eax)
 80485cc:	60                   	pusha  
 80485cd:	00 00                	add    %al,(%eax)
 80485cf:	00 6b fe             	add    %ch,-0x2(%ebx)
 80485d2:	ff                   	(bad)  
 80485d3:	ff 24 00             	jmp    *(%eax,%eax,1)
 80485d6:	00 00                	add    %al,(%eax)
 80485d8:	00 41 0e             	add    %al,0xe(%ecx)
 80485db:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80485e1:	60                   	pusha  
 80485e2:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 80485e5:	04 00                	add    $0x0,%al
 80485e7:	00 38                	add    %bh,(%eax)
 80485e9:	00 00                	add    %al,(%eax)
 80485eb:	00 80 00 00 00 70    	add    %al,0x70000000(%eax)
 80485f1:	fe                   	(bad)  
 80485f2:	ff                   	(bad)  
 80485f3:	ff 61 00             	jmp    *0x0(%ecx)
 80485f6:	00 00                	add    %al,(%eax)
 80485f8:	00 41 0e             	add    %al,0xe(%ecx)
 80485fb:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048601:	87 03                	xchg   %eax,(%ebx)
 8048603:	41                   	inc    %ecx
 8048604:	0e                   	push   %cs
 8048605:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804860b:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 8048612:	0e                   	push   %cs
 8048613:	14 41                	adc    $0x41,%al
 8048615:	0e                   	push   %cs
 8048616:	10 c3                	adc    %al,%bl
 8048618:	41                   	inc    %ecx
 8048619:	0e                   	push   %cs
 804861a:	0c c6                	or     $0xc6,%al
 804861c:	41                   	inc    %ecx
 804861d:	0e                   	push   %cs
 804861e:	08 c7                	or     %al,%bh
 8048620:	41                   	inc    %ecx
 8048621:	0e                   	push   %cs
 8048622:	04 c5                	add    $0xc5,%al
 8048624:	10 00                	adc    %al,(%eax)
 8048626:	00 00                	add    %al,(%eax)
 8048628:	bc 00 00 00 a4       	mov    $0xa4000000,%esp
 804862d:	fe                   	(bad)  
 804862e:	ff                   	(bad)  
 804862f:	ff 02                	incl   (%edx)
 8048631:	00 00                	add    %al,(%eax)
 8048633:	00 00                	add    %al,(%eax)
 8048635:	00 00                	add    %al,(%eax)
 8048637:	00 10                	add    %dl,(%eax)
 8048639:	00 00                	add    %al,(%eax)
 804863b:	00 d0                	add    %dl,%al
 804863d:	00 00                	add    %al,(%eax)
 804863f:	00 92 fe ff ff 04    	add    %dl,0x4fffffe(%edx)
 8048645:	00 00                	add    %al,(%eax)
 8048647:	00 00                	add    %al,(%eax)
 8048649:	00 00                	add    %al,(%eax)
	...

0804864c <__FRAME_END__>:
 804864c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	94                   	xchg   %eax,%esp
 8049f35:	82                   	(bad)  
 8049f36:	04 08                	add    $0x8,%al
 8049f38:	0d 00 00 00 0c       	or     $0xc000000,%eax
 8049f3d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	0c 82                	or     $0x82,%al
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	45                   	inc    %ebp
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	10 00                	adc    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 84 82 04 08 11 00 	add    %al,0x110804(%edx,%eax,4)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	7c 82                	jl     8049f18 <__CTOR_END__>
 8049f96:	04 08                	add    $0x8,%al
 8049f98:	12 00                	adc    (%eax),%al
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 5c             	ljmp   *0x5c(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 52             	ljmp   *0x52(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	e6 82                	out    %al,$0x82
 804a002:	04 08                	add    $0x8,%al
 804a004:	f6                   	.byte 0xf6
 804a005:	82                   	(bad)  
 804a006:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a008 <__data_start>:
 804a008:	00 00                	add    %al,(%eax)
	...

0804a00c <__dso_handle>:
 804a00c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a010 <completed.6159>:
 804a010:	00 00                	add    %al,(%eax)
	...

0804a014 <dtor_idx.6161>:
 804a014:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804821c>
   a:	74 75                	je     81 <_init-0x8048213>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x80481fe>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	b4 83                	mov    $0x83,%ah
  12:	04 08                	add    $0x8,%al
  14:	ab                   	stos   %eax,%es:(%edi)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	45                   	inc    %ebp
   1:	01 00                	add    %eax,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 00                	add    %al,(%eax)
   7:	00 00                	add    %al,(%eax)
   9:	00 04 01             	add    %al,(%ecx,%eax,1)
   c:	53                   	push   %ebx
   d:	00 00                	add    %al,(%eax)
   f:	00 01                	add    %al,(%ecx)
  11:	0d 00 00 00 18       	or     $0x18000000,%eax
  16:	00 00                	add    %al,(%eax)
  18:	00 b4 83 04 08 5f 84 	add    %dh,-0x7ba0f7fc(%ebx,%eax,4)
  1f:	04 08                	add    $0x8,%al
  21:	00 00                	add    %al,(%eax)
  23:	00 00                	add    %al,(%eax)
  25:	02 01                	add    (%ecx),%al
  27:	66                   	data16
  28:	00 01                	add    %al,(%ecx)
  2a:	01 01                	add    %eax,(%ecx)
  2c:	ed                   	in     (%dx),%eax
  2d:	00 00                	add    %al,(%eax)
  2f:	00 b4 83 04 08 3b 84 	add    %dh,-0x7bc4f7fc(%ebx,%eax,4)
  36:	04 08                	add    $0x8,%al
  38:	00 00                	add    %al,(%eax)
  3a:	00 00                	add    %al,(%eax)
  3c:	ed                   	in     (%dx),%eax
  3d:	00 00                	add    %al,(%eax)
  3f:	00 03                	add    %al,(%ebx)
  41:	64 00 00             	add    %al,%fs:(%eax)
  44:	00 01                	add    %al,(%ecx)
  46:	01 f4                	add    %esi,%esp
  48:	00 00                	add    %al,(%eax)
  4a:	00 02                	add    %al,(%edx)
  4c:	91                   	xchg   %eax,%ecx
  4d:	00 03                	add    %al,(%ebx)
  4f:	5f                   	pop    %edi
  50:	00 00                	add    %al,(%eax)
  52:	00 01                	add    %al,(%ecx)
  54:	01 f4                	add    %esi,%esp
  56:	00 00                	add    %al,(%eax)
  58:	00 02                	add    %al,(%edx)
  5a:	91                   	xchg   %eax,%ecx
  5b:	04 03                	add    $0x3,%al
  5d:	69 00 00 00 01 01    	imul   $0x1010000,(%eax),%eax
  63:	f4                   	hlt    
  64:	00 00                	add    %al,(%eax)
  66:	00 02                	add    %al,(%edx)
  68:	91                   	xchg   %eax,%ecx
  69:	08 04 73             	or     %al,(%ebx,%esi,2)
  6c:	31 00                	xor    %eax,(%eax)
  6e:	01 02                	add    %eax,(%edx)
  70:	f4                   	hlt    
  71:	00 00                	add    %al,(%eax)
  73:	00 02                	add    %al,(%edx)
  75:	91                   	xchg   %eax,%ecx
  76:	50                   	push   %eax
  77:	04 73                	add    $0x73,%al
  79:	32 00                	xor    (%eax),%al
  7b:	01 03                	add    %eax,(%ebx)
  7d:	f4                   	hlt    
  7e:	00 00                	add    %al,(%eax)
  80:	00 02                	add    %al,(%edx)
  82:	91                   	xchg   %eax,%ecx
  83:	54                   	push   %esp
  84:	04 73                	add    $0x73,%al
  86:	33 00                	xor    (%eax),%eax
  88:	01 04 f4             	add    %eax,(%esp,%esi,8)
  8b:	00 00                	add    %al,(%eax)
  8d:	00 02                	add    %al,(%edx)
  8f:	91                   	xchg   %eax,%ecx
  90:	58                   	pop    %eax
  91:	04 61                	add    $0x61,%al
  93:	31 00                	xor    %eax,(%eax)
  95:	01 06                	add    %eax,(%esi)
  97:	f4                   	hlt    
  98:	00 00                	add    %al,(%eax)
  9a:	00 02                	add    %al,(%edx)
  9c:	91                   	xchg   %eax,%ecx
  9d:	5c                   	pop    %esp
  9e:	04 61                	add    $0x61,%al
  a0:	32 00                	xor    (%eax),%al
  a2:	01 07                	add    %eax,(%edi)
  a4:	f4                   	hlt    
  a5:	00 00                	add    %al,(%eax)
  a7:	00 02                	add    %al,(%edx)
  a9:	91                   	xchg   %eax,%ecx
  aa:	60                   	pusha  
  ab:	04 61                	add    $0x61,%al
  ad:	33 00                	xor    (%eax),%eax
  af:	01 08                	add    %ecx,(%eax)
  b1:	f4                   	hlt    
  b2:	00 00                	add    %al,(%eax)
  b4:	00 02                	add    %al,(%edx)
  b6:	91                   	xchg   %eax,%ecx
  b7:	64                   	fs
  b8:	04 62                	add    $0x62,%al
  ba:	31 00                	xor    %eax,(%eax)
  bc:	01 0a                	add    %ecx,(%edx)
  be:	f4                   	hlt    
  bf:	00 00                	add    %al,(%eax)
  c1:	00 02                	add    %al,(%edx)
  c3:	91                   	xchg   %eax,%ecx
  c4:	68 04 62 32 00       	push   $0x326204
  c9:	01 0b                	add    %ecx,(%ebx)
  cb:	f4                   	hlt    
  cc:	00 00                	add    %al,(%eax)
  ce:	00 02                	add    %al,(%edx)
  d0:	91                   	xchg   %eax,%ecx
  d1:	6c                   	insb   (%dx),%es:(%edi)
  d2:	04 75                	add    $0x75,%al
  d4:	31 00                	xor    %eax,(%eax)
  d6:	01 0d ed 00 00 00    	add    %ecx,0xed
  dc:	02 91 70 04 75 32    	add    0x32750470(%ecx),%dl
  e2:	00 01                	add    %al,(%ecx)
  e4:	0e                   	push   %cs
  e5:	ed                   	in     (%dx),%eax
  e6:	00 00                	add    %al,(%eax)
  e8:	00 02                	add    %al,(%edx)
  ea:	91                   	xchg   %eax,%ecx
  eb:	74 00                	je     ed <_init-0x80481a7>
  ed:	05 04 07 00 00       	add    $0x704,%eax
  f2:	00 00                	add    %al,(%eax)
  f4:	06                   	push   %es
  f5:	04 05                	add    $0x5,%al
  f7:	69 6e 74 00 07 01 4e 	imul   $0x4e010700,0x74(%esi),%ebp
  fe:	00 00                	add    %al,(%eax)
 100:	00 01                	add    %al,(%ecx)
 102:	15 01 f4 00 00       	adc    $0xf401,%eax
 107:	00 3b                	add    %bh,(%ebx)
 109:	84 04 08             	test   %al,(%eax,%ecx,1)
 10c:	5f                   	pop    %edi
 10d:	84 04 08             	test   %al,(%eax,%ecx,1)
 110:	38 00                	cmp    %al,(%eax)
 112:	00 00                	add    %al,(%eax)
 114:	35 01 00 00 03       	xor    $0x3000001,%eax
 119:	49                   	dec    %ecx
 11a:	00 00                	add    %al,(%eax)
 11c:	00 01                	add    %al,(%ecx)
 11e:	15 f4 00 00 00       	adc    $0xf4,%eax
 123:	02 91 00 03 73 00    	add    0x730300(%ecx),%dl
 129:	00 00                	add    %al,(%eax)
 12b:	01 15 35 01 00 00    	add    %edx,0x135
 131:	02 91 04 00 08 04    	add    0x4080004(%ecx),%dl
 137:	3b 01                	cmp    (%ecx),%eax
 139:	00 00                	add    %al,(%eax)
 13b:	08 04 41             	or     %al,(%ecx,%eax,2)
 13e:	01 00                	add    %eax,(%eax)
 140:	00 05 01 06 6e 00    	add    %al,0x6e0601
 146:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 01                	adc    (%ecx),%al
   f:	10 06                	adc    %al,(%esi)
  11:	00 00                	add    %al,(%eax)
  13:	02 2e                	add    (%esi),%ch
  15:	01 3f                	add    %edi,(%edi)
  17:	0c 03                	or     $0x3,%al
  19:	08 3a                	or     %bh,(%edx)
  1b:	0b 3b                	or     (%ebx),%edi
  1d:	0b 27                	or     (%edi),%esp
  1f:	0c 49                	or     $0x49,%al
  21:	13 11                	adc    (%ecx),%edx
  23:	01 12                	add    %edx,(%edx)
  25:	01 40 06             	add    %eax,0x6(%eax)
  28:	01 13                	add    %edx,(%ebx)
  2a:	00 00                	add    %al,(%eax)
  2c:	03 05 00 03 0e 3a    	add    0x3a0e0300,%eax
  32:	0b 3b                	or     (%ebx),%edi
  34:	0b 49 13             	or     0x13(%ecx),%ecx
  37:	02 0a                	add    (%edx),%cl
  39:	00 00                	add    %al,(%eax)
  3b:	04 34                	add    $0x34,%al
  3d:	00 03                	add    %al,(%ebx)
  3f:	08 3a                	or     %bh,(%edx)
  41:	0b 3b                	or     (%ebx),%edi
  43:	0b 49 13             	or     0x13(%ecx),%ecx
  46:	02 0a                	add    (%edx),%cl
  48:	00 00                	add    %al,(%eax)
  4a:	05 24 00 0b 0b       	add    $0xb0b0024,%eax
  4f:	3e 0b 03             	or     %ds:(%ebx),%eax
  52:	0e                   	push   %cs
  53:	00 00                	add    %al,(%eax)
  55:	06                   	push   %es
  56:	24 00                	and    $0x0,%al
  58:	0b 0b                	or     (%ebx),%ecx
  5a:	3e 0b 03             	or     %ds:(%ebx),%eax
  5d:	08 00                	or     %al,(%eax)
  5f:	00 07                	add    %al,(%edi)
  61:	2e 01 3f             	add    %edi,%cs:(%edi)
  64:	0c 03                	or     $0x3,%al
  66:	0e                   	push   %cs
  67:	3a 0b                	cmp    (%ebx),%cl
  69:	3b 0b                	cmp    (%ebx),%ecx
  6b:	27                   	daa    
  6c:	0c 49                	or     $0x49,%al
  6e:	13 11                	adc    (%ecx),%edx
  70:	01 12                	add    %edx,(%edx)
  72:	01 40 06             	add    %eax,0x6(%eax)
  75:	01 13                	add    %edx,(%ebx)
  77:	00 00                	add    %al,(%eax)
  79:	08 0f                	or     %cl,(%edi)
  7b:	00 0b                	add    %cl,(%ebx)
  7d:	0b 49 13             	or     0x13(%ecx),%ecx
  80:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	46                   	inc    %esi
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 21                	add    %ah,(%ecx)
   7:	00 00                	add    %al,(%eax)
   9:	00 01                	add    %al,(%ecx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 74 72 2d          	add    %dh,0x2d(%edx,%esi,2)
  1f:	66 69 67 2d 33 2e    	imul   $0x2e33,0x2d(%edi),%sp
  25:	63 00                	arpl   %ax,(%eax)
  27:	00 00                	add    %al,(%eax)
  29:	00 00                	add    %al,(%eax)
  2b:	00 05 02 b4 83 04    	add    %al,0x483b402
  31:	08 01                	or     %al,(%ecx)
  33:	67 e5 e5             	addr16 in $0xe5,%eax
  36:	e6 67                	out    %al,$0x67
  38:	67 68 d7 d8 67 68    	addr16 push $0x6867d8d7
  3e:	83 83 83 30 67 08 ad 	addl   $0xffffffad,0x8673083(%ebx)
  45:	02 02                	add    (%edx),%al
  47:	00 01                	add    %al,(%ecx)
  49:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	75 6e                	jne    70 <_init-0x8048224>
   2:	73 69                	jae    6d <_init-0x8048227>
   4:	67 6e                	outsb  %ds:(%si),(%dx)
   6:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
   b:	74 00                	je     d <_init-0x8048287>
   d:	74 72                	je     81 <_init-0x8048213>
   f:	2d 66 69 67 2d       	sub    $0x2d676966,%eax
  14:	33 2e                	xor    (%esi),%ebp
  16:	63 00                	arpl   %ax,(%eax)
  18:	2f                   	das    
  19:	68 6f 6d 65 2f       	push   $0x2f656d6f
  1e:	66 61                	popaw  
  20:	63 30                	arpl   %si,(%eax)
  22:	35 2f 6d 63 63       	xor    $0x63636d2f,%eax
  27:	61                   	popa   
  28:	6d                   	insl   (%dx),%es:(%edi)
  29:	61                   	popa   
  2a:	6e                   	outsb  %ds:(%esi),(%dx)
  2b:	74 2f                	je     5c <_init-0x8048238>
  2d:	72 65                	jb     94 <_init-0x8048200>
  2f:	2f                   	das    
  30:	74 79                	je     ab <_init-0x80481e9>
  32:	70 65                	jo     99 <_init-0x80481fb>
  34:	2d 66 6c 6f 77       	sub    $0x776f6c66,%eax
  39:	2f                   	das    
  3a:	74 79                	je     b5 <_init-0x80481df>
  3c:	70 65                	jo     a3 <_init-0x80481f1>
  3e:	2d 69 6e 66 65       	sub    $0x65666e69,%eax
  43:	72 2d                	jb     72 <_init-0x8048222>
  45:	73 72                	jae    b9 <_init-0x80481db>
  47:	63 00                	arpl   %ax,(%eax)
  49:	61                   	popa   
  4a:	72 67                	jb     b3 <_init-0x80481e1>
  4c:	63 00                	arpl   %ax,(%eax)
  4e:	6d                   	insl   (%dx),%es:(%edi)
  4f:	61                   	popa   
  50:	69 6e 00 47 4e 55 20 	imul   $0x20554e47,0x0(%esi),%ebp
  57:	43                   	inc    %ebx
  58:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  5b:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
  5f:	61                   	popa   
  60:	72 67                	jb     c9 <_init-0x80481cb>
  62:	32 00                	xor    (%eax),%al
  64:	61                   	popa   
  65:	72 67                	jb     ce <_init-0x80481c6>
  67:	31 00                	xor    %eax,(%eax)
  69:	61                   	popa   
  6a:	72 67                	jb     d3 <_init-0x80481c1>
  6c:	33 00                	xor    (%eax),%eax
  6e:	63 68 61             	arpl   %bp,0x61(%eax)
  71:	72 00                	jb     73 <_init-0x8048221>
  73:	61                   	popa   
  74:	72 67                	jb     dd <_init-0x80481b7>
  76:	76 00                	jbe    78 <_init-0x804821c>

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	01 00                	add    %eax,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	02 00                	add    (%eax),%al
   a:	74 04                	je     10 <_init-0x8048284>
   c:	01 00                	add    %eax,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	03 00                	add    (%eax),%eax
  12:	00 00                	add    %al,(%eax)
  14:	02 00                	add    (%eax),%al
  16:	74 08                	je     20 <_init-0x8048274>
  18:	03 00                	add    (%eax),%eax
  1a:	00 00                	add    %al,(%eax)
  1c:	86 00                	xchg   %al,(%eax)
  1e:	00 00                	add    %al,(%eax)
  20:	02 00                	add    (%eax),%al
  22:	75 08                	jne    2c <_init-0x8048268>
  24:	86 00                	xchg   %al,(%eax)
  26:	00 00                	add    %al,(%eax)
  28:	87 00                	xchg   %eax,(%eax)
  2a:	00 00                	add    %al,(%eax)
  2c:	02 00                	add    (%eax),%al
  2e:	74 04                	je     34 <_init-0x8048260>
	...
  38:	87 00                	xchg   %eax,(%eax)
  3a:	00 00                	add    %al,(%eax)
  3c:	88 00                	mov    %al,(%eax)
  3e:	00 00                	add    %al,(%eax)
  40:	02 00                	add    (%eax),%al
  42:	74 04                	je     48 <_init-0x804824c>
  44:	88 00                	mov    %al,(%eax)
  46:	00 00                	add    %al,(%eax)
  48:	8a 00                	mov    (%eax),%al
  4a:	00 00                	add    %al,(%eax)
  4c:	02 00                	add    (%eax),%al
  4e:	74 08                	je     58 <_init-0x804823c>
  50:	8a 00                	mov    (%eax),%al
  52:	00 00                	add    %al,(%eax)
  54:	aa                   	stos   %al,%es:(%edi)
  55:	00 00                	add    %al,(%eax)
  57:	00 02                	add    %al,(%edx)
  59:	00 75 08             	add    %dh,0x8(%ebp)
  5c:	aa                   	stos   %al,%es:(%edi)
  5d:	00 00                	add    %al,(%eax)
  5f:	00 ab 00 00 00 02    	add    %ch,0x2000000(%ebx)
  65:	00 74 04 00          	add    %dh,0x0(%esp,%eax,1)
  69:	00 00                	add    %al,(%eax)
  6b:	00 00                	add    %al,(%eax)
  6d:	00 00                	add    %al,(%eax)
	...
