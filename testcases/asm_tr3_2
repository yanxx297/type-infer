
tr3_2:     file format elf32-i386


Disassembly of section .init:

08048294 <_init>:
 8048294:	53                   	push   %ebx
 8048295:	83 ec 08             	sub    $0x8,%esp
 8048298:	e8 00 00 00 00       	call   804829d <_init+0x9>
 804829d:	5b                   	pop    %ebx
 804829e:	81 c3 57 1d 00 00    	add    $0x1d57,%ebx
 80482a4:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482aa:	85 c0                	test   %eax,%eax
 80482ac:	74 05                	je     80482b3 <_init+0x1f>
 80482ae:	e8 2d 00 00 00       	call   80482e0 <__gmon_start__@plt>
 80482b3:	e8 d8 00 00 00       	call   8048390 <frame_dummy>
 80482b8:	e8 e3 02 00 00       	call   80485a0 <__do_global_ctors_aux>
 80482bd:	83 c4 08             	add    $0x8,%esp
 80482c0:	5b                   	pop    %ebx
 80482c1:	c3                   	ret    

Disassembly of section .plt:

080482d0 <__gmon_start__@plt-0x10>:
 80482d0:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80482d6:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482dc:	00 00                	add    %al,(%eax)
	...

080482e0 <__gmon_start__@plt>:
 80482e0:	ff 25 00 a0 04 08    	jmp    *0x804a000
 80482e6:	68 00 00 00 00       	push   $0x0
 80482eb:	e9 e0 ff ff ff       	jmp    80482d0 <_init+0x3c>

080482f0 <__libc_start_main@plt>:
 80482f0:	ff 25 04 a0 04 08    	jmp    *0x804a004
 80482f6:	68 08 00 00 00       	push   $0x8
 80482fb:	e9 d0 ff ff ff       	jmp    80482d0 <_init+0x3c>

Disassembly of section .text:

08048300 <_start>:
 8048300:	31 ed                	xor    %ebp,%ebp
 8048302:	5e                   	pop    %esi
 8048303:	89 e1                	mov    %esp,%ecx
 8048305:	83 e4 f0             	and    $0xfffffff0,%esp
 8048308:	50                   	push   %eax
 8048309:	54                   	push   %esp
 804830a:	52                   	push   %edx
 804830b:	68 90 85 04 08       	push   $0x8048590
 8048310:	68 20 85 04 08       	push   $0x8048520
 8048315:	51                   	push   %ecx
 8048316:	56                   	push   %esi
 8048317:	68 d4 84 04 08       	push   $0x80484d4
 804831c:	e8 cf ff ff ff       	call   80482f0 <__libc_start_main@plt>
 8048321:	f4                   	hlt    
 8048322:	90                   	nop
 8048323:	90                   	nop
 8048324:	90                   	nop
 8048325:	90                   	nop
 8048326:	90                   	nop
 8048327:	90                   	nop
 8048328:	90                   	nop
 8048329:	90                   	nop
 804832a:	90                   	nop
 804832b:	90                   	nop
 804832c:	90                   	nop
 804832d:	90                   	nop
 804832e:	90                   	nop
 804832f:	90                   	nop

08048330 <__do_global_dtors_aux>:
 8048330:	55                   	push   %ebp
 8048331:	89 e5                	mov    %esp,%ebp
 8048333:	53                   	push   %ebx
 8048334:	83 ec 04             	sub    $0x4,%esp
 8048337:	80 3d 10 a0 04 08 00 	cmpb   $0x0,0x804a010
 804833e:	75 3f                	jne    804837f <__do_global_dtors_aux+0x4f>
 8048340:	a1 14 a0 04 08       	mov    0x804a014,%eax
 8048345:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804834a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048350:	c1 fb 02             	sar    $0x2,%ebx
 8048353:	83 eb 01             	sub    $0x1,%ebx
 8048356:	39 d8                	cmp    %ebx,%eax
 8048358:	73 1e                	jae    8048378 <__do_global_dtors_aux+0x48>
 804835a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048360:	83 c0 01             	add    $0x1,%eax
 8048363:	a3 14 a0 04 08       	mov    %eax,0x804a014
 8048368:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804836f:	a1 14 a0 04 08       	mov    0x804a014,%eax
 8048374:	39 d8                	cmp    %ebx,%eax
 8048376:	72 e8                	jb     8048360 <__do_global_dtors_aux+0x30>
 8048378:	c6 05 10 a0 04 08 01 	movb   $0x1,0x804a010
 804837f:	83 c4 04             	add    $0x4,%esp
 8048382:	5b                   	pop    %ebx
 8048383:	5d                   	pop    %ebp
 8048384:	c3                   	ret    
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <frame_dummy>:
 8048390:	55                   	push   %ebp
 8048391:	89 e5                	mov    %esp,%ebp
 8048393:	83 ec 18             	sub    $0x18,%esp
 8048396:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804839b:	85 c0                	test   %eax,%eax
 804839d:	74 12                	je     80483b1 <frame_dummy+0x21>
 804839f:	b8 00 00 00 00       	mov    $0x0,%eax
 80483a4:	85 c0                	test   %eax,%eax
 80483a6:	74 09                	je     80483b1 <frame_dummy+0x21>
 80483a8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80483af:	ff d0                	call   *%eax
 80483b1:	c9                   	leave  
 80483b2:	c3                   	ret    
 80483b3:	90                   	nop

080483b4 <f1>:
unsigned f1(int s1, int s2, int s3) {
 80483b4:	55                   	push   %ebp
 80483b5:	89 e5                	mov    %esp,%ebp
 80483b7:	83 ec 20             	sub    $0x20,%esp
	unsigned a1 = s2/s3;
 80483ba:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483bd:	89 c2                	mov    %eax,%edx
 80483bf:	c1 fa 1f             	sar    $0x1f,%edx
 80483c2:	f7 7d 10             	idivl  0x10(%ebp)
 80483c5:	89 45 e0             	mov    %eax,-0x20(%ebp)
	unsigned a2 = s1/s3;
 80483c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80483cb:	89 c2                	mov    %eax,%edx
 80483cd:	c1 fa 1f             	sar    $0x1f,%edx
 80483d0:	f7 7d 10             	idivl  0x10(%ebp)
 80483d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)

	unsigned b1 = a1 + a2;
 80483d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80483d9:	8b 55 e0             	mov    -0x20(%ebp),%edx
 80483dc:	01 d0                	add    %edx,%eax
 80483de:	89 45 e8             	mov    %eax,-0x18(%ebp)
	unsigned b2 = a1 ^ a2;
 80483e1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80483e4:	8b 55 e0             	mov    -0x20(%ebp),%edx
 80483e7:	31 d0                	xor    %edx,%eax
 80483e9:	89 45 ec             	mov    %eax,-0x14(%ebp)
	unsigned b3 = a1 - a2;
 80483ec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80483ef:	8b 55 e0             	mov    -0x20(%ebp),%edx
 80483f2:	89 d1                	mov    %edx,%ecx
 80483f4:	29 c1                	sub    %eax,%ecx
 80483f6:	89 c8                	mov    %ecx,%eax
 80483f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
	unsigned u1 = b1;
 80483fb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80483fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
	unsigned u2 = b2;
 8048401:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048404:	89 45 f8             	mov    %eax,-0x8(%ebp)
	unsigned u3 = b3;
 8048407:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804840a:	89 45 fc             	mov    %eax,-0x4(%ebp)
	u1 /= u2;
 804840d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048410:	ba 00 00 00 00       	mov    $0x0,%edx
 8048415:	f7 75 f8             	divl   -0x8(%ebp)
 8048418:	89 45 f4             	mov    %eax,-0xc(%ebp)
	u2 /= u3;
 804841b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804841e:	ba 00 00 00 00       	mov    $0x0,%edx
 8048423:	f7 75 fc             	divl   -0x4(%ebp)
 8048426:	89 45 f8             	mov    %eax,-0x8(%ebp)
	u3 /= u1;
 8048429:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804842c:	ba 00 00 00 00       	mov    $0x0,%edx
 8048431:	f7 75 f4             	divl   -0xc(%ebp)
 8048434:	89 45 fc             	mov    %eax,-0x4(%ebp)
	return u1 + u2 + u3;
 8048437:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804843a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804843d:	01 d0                	add    %edx,%eax
 804843f:	03 45 fc             	add    -0x4(%ebp),%eax

}
 8048442:	c9                   	leave  
 8048443:	c3                   	ret    

08048444 <f2>:

unsigned f2(int s1, int s2, int s3) {
 8048444:	55                   	push   %ebp
 8048445:	89 e5                	mov    %esp,%ebp
 8048447:	83 ec 20             	sub    $0x20,%esp
	int a1 = s2/s3;
 804844a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804844d:	89 c2                	mov    %eax,%edx
 804844f:	c1 fa 1f             	sar    $0x1f,%edx
 8048452:	f7 7d 10             	idivl  0x10(%ebp)
 8048455:	89 45 e0             	mov    %eax,-0x20(%ebp)
	int a2 = s1/s3;
 8048458:	8b 45 08             	mov    0x8(%ebp),%eax
 804845b:	89 c2                	mov    %eax,%edx
 804845d:	c1 fa 1f             	sar    $0x1f,%edx
 8048460:	f7 7d 10             	idivl  0x10(%ebp)
 8048463:	89 45 e4             	mov    %eax,-0x1c(%ebp)

	int b1 = a1 + a2;
 8048466:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048469:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804846c:	01 d0                	add    %edx,%eax
 804846e:	89 45 e8             	mov    %eax,-0x18(%ebp)
	int b2 = a1 ^ a2;
 8048471:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048474:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8048477:	31 d0                	xor    %edx,%eax
 8048479:	89 45 ec             	mov    %eax,-0x14(%ebp)
	int b3 = a1 - a2;
 804847c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804847f:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8048482:	89 d1                	mov    %edx,%ecx
 8048484:	29 c1                	sub    %eax,%ecx
 8048486:	89 c8                	mov    %ecx,%eax
 8048488:	89 45 f0             	mov    %eax,-0x10(%ebp)
	unsigned u1 = b1;
 804848b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804848e:	89 45 f4             	mov    %eax,-0xc(%ebp)
	unsigned u2 = b2;
 8048491:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048494:	89 45 f8             	mov    %eax,-0x8(%ebp)
	unsigned u3 = b3;
 8048497:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804849a:	89 45 fc             	mov    %eax,-0x4(%ebp)
	u1 /= u2;
 804849d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484a0:	ba 00 00 00 00       	mov    $0x0,%edx
 80484a5:	f7 75 f8             	divl   -0x8(%ebp)
 80484a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
	u2 /= u3;
 80484ab:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80484ae:	ba 00 00 00 00       	mov    $0x0,%edx
 80484b3:	f7 75 fc             	divl   -0x4(%ebp)
 80484b6:	89 45 f8             	mov    %eax,-0x8(%ebp)
	u3 /= u1;
 80484b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80484bc:	ba 00 00 00 00       	mov    $0x0,%edx
 80484c1:	f7 75 f4             	divl   -0xc(%ebp)
 80484c4:	89 45 fc             	mov    %eax,-0x4(%ebp)
	return u1 + u2 + u3;
 80484c7:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80484ca:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484cd:	01 d0                	add    %edx,%eax
 80484cf:	03 45 fc             	add    -0x4(%ebp),%eax

}
 80484d2:	c9                   	leave  
 80484d3:	c3                   	ret    

080484d4 <main>:

int main(int argc, char **argv) {
 80484d4:	55                   	push   %ebp
 80484d5:	89 e5                	mov    %esp,%ebp
 80484d7:	83 ec 0c             	sub    $0xc,%esp
	f1(1, 2, 3);
 80484da:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 80484e1:	00 
 80484e2:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 80484e9:	00 
 80484ea:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80484f1:	e8 be fe ff ff       	call   80483b4 <f1>
	f2(1, 2, 3);
 80484f6:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 80484fd:	00 
 80484fe:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 8048505:	00 
 8048506:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804850d:	e8 32 ff ff ff       	call   8048444 <f2>
	return 0;
 8048512:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8048517:	c9                   	leave  
 8048518:	c3                   	ret    
 8048519:	90                   	nop
 804851a:	90                   	nop
 804851b:	90                   	nop
 804851c:	90                   	nop
 804851d:	90                   	nop
 804851e:	90                   	nop
 804851f:	90                   	nop

08048520 <__libc_csu_init>:
 8048520:	55                   	push   %ebp
 8048521:	57                   	push   %edi
 8048522:	56                   	push   %esi
 8048523:	53                   	push   %ebx
 8048524:	e8 69 00 00 00       	call   8048592 <__i686.get_pc_thunk.bx>
 8048529:	81 c3 cb 1a 00 00    	add    $0x1acb,%ebx
 804852f:	83 ec 1c             	sub    $0x1c,%esp
 8048532:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048536:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804853c:	e8 53 fd ff ff       	call   8048294 <_init>
 8048541:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048547:	29 c7                	sub    %eax,%edi
 8048549:	c1 ff 02             	sar    $0x2,%edi
 804854c:	85 ff                	test   %edi,%edi
 804854e:	74 29                	je     8048579 <__libc_csu_init+0x59>
 8048550:	31 f6                	xor    %esi,%esi
 8048552:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048558:	8b 44 24 38          	mov    0x38(%esp),%eax
 804855c:	89 2c 24             	mov    %ebp,(%esp)
 804855f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048563:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048567:	89 44 24 04          	mov    %eax,0x4(%esp)
 804856b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048572:	83 c6 01             	add    $0x1,%esi
 8048575:	39 fe                	cmp    %edi,%esi
 8048577:	75 df                	jne    8048558 <__libc_csu_init+0x38>
 8048579:	83 c4 1c             	add    $0x1c,%esp
 804857c:	5b                   	pop    %ebx
 804857d:	5e                   	pop    %esi
 804857e:	5f                   	pop    %edi
 804857f:	5d                   	pop    %ebp
 8048580:	c3                   	ret    
 8048581:	eb 0d                	jmp    8048590 <__libc_csu_fini>
 8048583:	90                   	nop
 8048584:	90                   	nop
 8048585:	90                   	nop
 8048586:	90                   	nop
 8048587:	90                   	nop
 8048588:	90                   	nop
 8048589:	90                   	nop
 804858a:	90                   	nop
 804858b:	90                   	nop
 804858c:	90                   	nop
 804858d:	90                   	nop
 804858e:	90                   	nop
 804858f:	90                   	nop

08048590 <__libc_csu_fini>:
 8048590:	f3 c3                	repz ret 

08048592 <__i686.get_pc_thunk.bx>:
 8048592:	8b 1c 24             	mov    (%esp),%ebx
 8048595:	c3                   	ret    
 8048596:	90                   	nop
 8048597:	90                   	nop
 8048598:	90                   	nop
 8048599:	90                   	nop
 804859a:	90                   	nop
 804859b:	90                   	nop
 804859c:	90                   	nop
 804859d:	90                   	nop
 804859e:	90                   	nop
 804859f:	90                   	nop

080485a0 <__do_global_ctors_aux>:
 80485a0:	55                   	push   %ebp
 80485a1:	89 e5                	mov    %esp,%ebp
 80485a3:	53                   	push   %ebx
 80485a4:	83 ec 04             	sub    $0x4,%esp
 80485a7:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 80485ac:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485af:	74 13                	je     80485c4 <__do_global_ctors_aux+0x24>
 80485b1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80485b6:	66 90                	xchg   %ax,%ax
 80485b8:	83 eb 04             	sub    $0x4,%ebx
 80485bb:	ff d0                	call   *%eax
 80485bd:	8b 03                	mov    (%ebx),%eax
 80485bf:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485c2:	75 f4                	jne    80485b8 <__do_global_ctors_aux+0x18>
 80485c4:	83 c4 04             	add    $0x4,%esp
 80485c7:	5b                   	pop    %ebx
 80485c8:	5d                   	pop    %ebp
 80485c9:	c3                   	ret    
 80485ca:	90                   	nop
 80485cb:	90                   	nop

Disassembly of section .fini:

080485cc <_fini>:
 80485cc:	53                   	push   %ebx
 80485cd:	83 ec 08             	sub    $0x8,%esp
 80485d0:	e8 00 00 00 00       	call   80485d5 <_fini+0x9>
 80485d5:	5b                   	pop    %ebx
 80485d6:	81 c3 1f 1a 00 00    	add    $0x1a1f,%ebx
 80485dc:	e8 4f fd ff ff       	call   8048330 <__do_global_dtors_aux>
 80485e1:	83 c4 08             	add    $0x8,%esp
 80485e4:	5b                   	pop    %ebx
 80485e5:	c3                   	ret    
